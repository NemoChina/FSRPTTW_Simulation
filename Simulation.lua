---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by NemoChinagao.
--- DateTime: 2022/4/19 11:56
---
function new_ship(id,route)
    --route = {cost = cost, 1,2,3,1}
    local ship = {}
    ship.id = id
    ship.route = route
    ship.load = 0
    ship.x, ship.y = 0,0
    ship.time = 0
    ship.sequence = 0
    ship.draft = 0
    ship.done = false
    function ship.ini()
        ship.x, ship.y = Nodes[1].x, Nodes[1].y
        for i = 2, #ship.route - 1 do
            ship.load = ship.load + Nodes[ship.route[i]].d
        end
        ship.time = 0
        ship.sequence = 2
        ship.at_sail(ship.route[1],ship.route[ship.sequence])
    end

    function ship.at_sail(oid,did)
        SetValue(ship.state,'ship'..ship.id..'sailing',"STATE")
        --添加ship.shp的第一个点坐标
        ship.shp = AddShape(Lines,Nodes[oid].x, Nodes[oid].y)
        SetValue(ship.shp,ship.id,'SHIP')
        function ship.update(time)
            local delta_time = time - ship.time
            local distance = math.sqrt((Nodes[did].x-ship.x)^2 + (Nodes[did].y-ship.y)^2)
            if (delta_time  * Truck.speed / 60) >= distance then
                --到达did
                --删除ship.shp
                --添加永久shp
                DelShape(ship.shp)
                local permentshp = AddShape(Lines,Nodes[oid].x, Nodes[oid].y, Nodes[did].x, Nodes[did].y)
                SetValue(permentshp,ship.id,'SHIP')
                ship.time = time
                ship.x, ship.y = Nodes[did].x, Nodes[did].y
                if did == 1 then
                    ship.end_simu()
                else
                    ship.draft = Cal_draft(ship.load)
                    local draft_limit = DL(did,time)
                    if draft_limit >= ship.draft then
                        SetValue(Points,timevert(time),'ST',did)
--                        print(draft_limit,',',ship.draft)
--                        print('sever')
                        ship.sever(did)
                    else
--                        print(draft_limit,',',ship.draft)
--                        print('wait')
                        ship.anchor_wait(did)
                    end
                end
            else
                --继续在途，更新位置
                ship.time = time
                ship.x = ship.x + (delta_time * Truck.speed / 60) * ((Nodes[did].x-ship.x)/distance)
                ship.y = ship.y + (delta_time * Truck.speed / 60) * ((Nodes[did].y-ship.y)/distance)
                --更新ship.shp（添加第二个点坐标或更新第二个点坐标）
                if GetPointCount(ship.shp) == 1 then
                    AddPoint(ship.shp,ship.x, ship.y)
                else
                    SetPoint(ship.shp,ship.x, ship.y, 2)
                end
            end
        end
    end

    function ship.anchor_wait(pid)
        SetValue(ship.state,'ship'..ship.id..'anchor_waitting',"STATE")
        function ship.update(time)
            local delta_time = time - ship.time
            local draft_limit = DL(pid,time)
            ship.time = time
            if draft_limit >= ship.draft then
                SetValue(Points,timevert(time),'ST',pid)
                ship.sever(pid)
            end
        end
    end

    function ship.sever(pid)
        SetValue(ship.state,'ship'..ship.id..'oprating',"STATE")
        local workload = Nodes[pid].d + Nodes[pid].p
        function ship.update(time)
            local delta_time = time - ship.time
            ship.time = time
            workload = workload - delta_time * workspeed / 60
            if workload <= 0 then
                --完成所有装卸任务
                ship.load = ship.load + Nodes[pid].p - Nodes[pid].d
                ship.draft = Cal_draft(ship.load)
                local draft_limit = DL(pid,time)
                if draft_limit >= ship.draft then
--                    print(draft_limit,',',ship.draft)
--                    print('sail')
                    ship.sequence = ship.sequence + 1
                    ship.at_sail(pid,ship.route[ship.sequence])
                else
--                    print(draft_limit,',',ship.draft)
--                    print('wait')
                    ship.berth_wait(pid)
                end
            end
        end
    end

    function ship.berth_wait(pid)
        SetValue(ship.state,'ship'..ship.id..'berth_waitting',"STATE")
        function ship.update(time)
            local delta_time = time - ship.time
            local draft_limit = DL(pid,time)
            ship.time = time
            if draft_limit >= ship.draft then
                ship.sequence = ship.sequence + 1
                ship.at_sail(pid,ship.route[ship.sequence])
            end
        end
    end

    function ship.end_simu()
        SetValue(ship.state,'ship'..ship.id..'done',"STATE")
        ship.done = true
        --print('The eagle returns to its nest')
        function ship.update()
        end
    end

    function ship.update()

    end
    return ship
end